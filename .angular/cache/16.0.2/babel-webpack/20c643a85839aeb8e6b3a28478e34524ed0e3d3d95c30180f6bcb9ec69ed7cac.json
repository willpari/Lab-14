{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductoService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:4000/api/productos/';\n    this.pdf = 'http://localhost:4000/api/generate-pdf/';\n  }\n  getPDF() {\n    return this.http.get(this.pdf, {\n      responseType: 'blob'\n    });\n  }\n  getProductos() {\n    return this.http.get(this.url);\n  }\n  deleteProducto(id) {\n    return this.http.delete(this.url + id);\n  }\n  guardarProducto(producto) {\n    return this.http.post(this.url, producto);\n  }\n  viewProducto(id) {\n    return this.http.get(this.url + id);\n  }\n  actualizarProducto(id, producto) {\n    return this.http.put(this.url + id, producto);\n  }\n}\nProductoService.ɵfac = function ProductoService_Factory(t) {\n  return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductoService,\n  factory: ProductoService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductoService };","map":{"version":3,"names":["ProductoService","constructor","http","url","pdf","getPDF","get","responseType","getProductos","deleteProducto","id","delete","guardarProducto","producto","post","viewProducto","actualizarProducto","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\dele2\\Desktop\\Examen\\Lab13_DAWA\\sistema\\src\\app\\services\\producto.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Producto } from '../models/producto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n  url = 'http://localhost:4000/api/productos/';\r\n  pdf = 'http://localhost:4000/api/generate-pdf/';\r\n\r\n  constructor(private http: HttpClient) { \r\n\r\n  }\r\n  \r\n  getPDF(): Observable<any> {\r\n    return this.http.get(this.pdf, { responseType: 'blob' })\r\n  }\r\n\r\n  getProductos(): Observable<any> {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  deleteProducto(id: string): Observable<any> {\r\n    return this.http.delete(this.url + id);\r\n  }\r\n\r\n  guardarProducto(producto: Producto): Observable<any> {\r\n    return this.http.post(this.url, producto);\r\n  }\r\n\r\n  viewProducto(id?: string): Observable<any> {\r\n    return this.http.get(this.url + id)\r\n  }\r\n\r\n  actualizarProducto(id: string, producto: Producto): Observable<any> {\r\n    return this.http.put(this.url + id, producto);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAKA,MAGaA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,GAAG,GAAG,sCAAsC;IAC5C,KAAAC,GAAG,GAAG,yCAAyC;EAI/C;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACF,GAAG,EAAE;MAAEG,YAAY,EAAE;IAAM,CAAE,CAAC;EAC1D;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,CAAC;EAChC;EAEAM,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,IAAI,CAACR,GAAG,GAAGO,EAAE,CAAC;EACxC;EAEAE,eAAeA,CAACC,QAAkB;IAChC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,IAAI,CAACX,GAAG,EAAEU,QAAQ,CAAC;EAC3C;EAEAE,YAAYA,CAACL,EAAW;IACtB,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,GAAGO,EAAE,CAAC;EACrC;EAEAM,kBAAkBA,CAACN,EAAU,EAAEG,QAAkB;IAC/C,OAAO,IAAI,CAACX,IAAI,CAACe,GAAG,CAAC,IAAI,CAACd,GAAG,GAAGO,EAAE,EAAEG,QAAQ,CAAC;EAC/C;;AA9BWb,eAAe,C;mBAAfA,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfrB,eAAe,C;SAAfA,eAAe;EAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPxB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}